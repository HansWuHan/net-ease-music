#!/usr/bin/env node //这是一个 node 可执行文件

/**
 * 引入依赖模块
 */

 //引入 app 实例。
var app = require('../app');
// 引入 debug 模块，打印调试日志。
var debug = require('debug')('music:server');
//载入http模块
var http = require('http');
/**
 * 设置端口
 */

var port = normalizePort(process.env.PORT || '3002');
app.set('port', port);

/**
 * 创建一个http服务.
 */

var server = http.createServer(app);
/**
 * 监听端口
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
// named pipe
return val;
  }

  if (port >= 0) {
// port number
return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
throw error;
  }

  var bind = typeof port === 'string'
? 'Pipe ' + port
: 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
case 'EACCES':
  console.error(bind + ' requires elevated privileges');
  process.exit(1);
  break;
case 'EADDRINUSE':
  console.error(bind + ' is already in use');
  process.exit(1);
  break;
default:
  throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
? 'pipe ' + addr
: 'port ' + addr.port;
  debug('Listening on ' + bind);
}
