import _extends from 'babel-runtime/helpers/extends';
import React from 'react';
import classnames from 'classnames';
import createClass from 'create-react-class';
import MultiPickerMixin from './MultiPickerMixin';
var MultiPicker = createClass({
    mixins: [MultiPickerMixin],
    render: function render() {
        var _this = this;

        var _props = this.props,
            prefixCls = _props.prefixCls,
            className = _props.className,
            rootNativeProps = _props.rootNativeProps,
            children = _props.children;

        var selectedValue = this.getValue();
        var colElements = React.Children.map(children, function (col, i) {
            return React.cloneElement(col, {
                selectedValue: selectedValue[i],
                onValueChange: function onValueChange() {
                    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                        args[_key] = arguments[_key];
                    }

                    return _this.onValueChange.apply(_this, [i].concat(args));
                }
            });
        });
        return React.createElement(
            'div',
            _extends({}, rootNativeProps, { style: this.props.style, className: classnames(className, prefixCls) }),
            colElements
        );
    }
});
export default MultiPicker;